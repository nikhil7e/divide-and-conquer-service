// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id                  Int         @id @default(autoincrement())
  name                String
  resources           Int
  troops              Int
  allies              Country[]   @relation("relationships")
  allyCountryIds      Int[]
  enemies             Country[]   @relation("relationships")
  enemyCountryIds     Int[]
  conqueredCountries  Country[]   @relation("conqueredBy")
  conqueredCountryIds Int[]
  conqueringCountry   Country?    @relation("conqueredBy", fields: [conqueringCountryId], references: [id])
  conqueringCountryId Int?
  gameState           GameState   @relation(fields: [gameStateId], references: [id], onDelete: Cascade)
  gameStateId         Int
  playerGameState     GameState[] @relation("playerCountry")

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@unique([name, gameStateId])
}

model GameState {
  id              Int       @id @default(autoincrement())
  countries       Country[]
  playerCountry   Country?  @relation("playerCountry", fields: [playerCountryId], references: [id], onDelete: Cascade)
  playerCountryId Int?
  turn            Int       @default(1)
  user            User      @relation(fields: [userId], references: [id])
  userId          Int       @unique
  active          Boolean   @default(true)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  gameState GameState?

  gameStateId Int?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}
